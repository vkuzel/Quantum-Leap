/*
 * This file is generated by jOOQ.
 */
package cz.quantumleap.admin.tables.records;


import cz.quantumleap.admin.tables.NotificationTable;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;

import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NotificationRecord extends UpdatableRecordImpl<NotificationRecord> implements Record8<Long, String, String[], Long, Long, LocalDateTime, LocalDateTime, Long> {

    private static final long serialVersionUID = 615964807;

    /**
     * Setter for <code>admin.notification.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>admin.notification.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>admin.notification.code</code>.
     */
    public void setCode(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>admin.notification.code</code>.
     */
    public String getCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>admin.notification.message_arguments</code>.
     */
    public void setMessageArguments(String[] value) {
        set(2, value);
    }

    /**
     * Getter for <code>admin.notification.message_arguments</code>.
     */
    public String[] getMessageArguments() {
        return (String[]) get(2);
    }

    /**
     * Setter for <code>admin.notification.person_id</code>.
     */
    public void setPersonId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>admin.notification.person_id</code>.
     */
    public Long getPersonId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>admin.notification.role_id</code>.
     */
    public void setRoleId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>admin.notification.role_id</code>.
     */
    public Long getRoleId() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>admin.notification.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>admin.notification.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>admin.notification.resolved_at</code>.
     */
    public void setResolvedAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>admin.notification.resolved_at</code>.
     */
    public LocalDateTime getResolvedAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>admin.notification.resolved_by</code>.
     */
    public void setResolvedBy(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>admin.notification.resolved_by</code>.
     */
    public Long getResolvedBy() {
        return (Long) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, String, String[], Long, Long, LocalDateTime, LocalDateTime, Long> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, String, String[], Long, Long, LocalDateTime, LocalDateTime, Long> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return NotificationTable.NOTIFICATION.ID;
    }

    @Override
    public Field<String> field2() {
        return NotificationTable.NOTIFICATION.CODE;
    }

    @Override
    public Field<String[]> field3() {
        return NotificationTable.NOTIFICATION.MESSAGE_ARGUMENTS;
    }

    @Override
    public Field<Long> field4() {
        return NotificationTable.NOTIFICATION.PERSON_ID;
    }

    @Override
    public Field<Long> field5() {
        return NotificationTable.NOTIFICATION.ROLE_ID;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return NotificationTable.NOTIFICATION.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return NotificationTable.NOTIFICATION.RESOLVED_AT;
    }

    @Override
    public Field<Long> field8() {
        return NotificationTable.NOTIFICATION.RESOLVED_BY;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getCode();
    }

    @Override
    public String[] component3() {
        return getMessageArguments();
    }

    @Override
    public Long component4() {
        return getPersonId();
    }

    @Override
    public Long component5() {
        return getRoleId();
    }

    @Override
    public LocalDateTime component6() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component7() {
        return getResolvedAt();
    }

    @Override
    public Long component8() {
        return getResolvedBy();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getCode();
    }

    @Override
    public String[] value3() {
        return getMessageArguments();
    }

    @Override
    public Long value4() {
        return getPersonId();
    }

    @Override
    public Long value5() {
        return getRoleId();
    }

    @Override
    public LocalDateTime value6() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value7() {
        return getResolvedAt();
    }

    @Override
    public Long value8() {
        return getResolvedBy();
    }

    @Override
    public NotificationRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public NotificationRecord value2(String value) {
        setCode(value);
        return this;
    }

    @Override
    public NotificationRecord value3(String[] value) {
        setMessageArguments(value);
        return this;
    }

    @Override
    public NotificationRecord value4(Long value) {
        setPersonId(value);
        return this;
    }

    @Override
    public NotificationRecord value5(Long value) {
        setRoleId(value);
        return this;
    }

    @Override
    public NotificationRecord value6(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public NotificationRecord value7(LocalDateTime value) {
        setResolvedAt(value);
        return this;
    }

    @Override
    public NotificationRecord value8(Long value) {
        setResolvedBy(value);
        return this;
    }

    @Override
    public NotificationRecord values(Long value1, String value2, String[] value3, Long value4, Long value5, LocalDateTime value6, LocalDateTime value7, Long value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NotificationRecord
     */
    public NotificationRecord() {
        super(NotificationTable.NOTIFICATION);
    }

    /**
     * Create a detached, initialised NotificationRecord
     */
    public NotificationRecord(Long id, String code, String[] messageArguments, Long personId, Long roleId, LocalDateTime createdAt, LocalDateTime resolvedAt, Long resolvedBy) {
        super(NotificationTable.NOTIFICATION);

        set(0, id);
        set(1, code);
        set(2, messageArguments);
        set(3, personId);
        set(4, roleId);
        set(5, createdAt);
        set(6, resolvedAt);
        set(7, resolvedBy);
    }
}
