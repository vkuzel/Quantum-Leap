/*
 * This file is generated by jOOQ.
*/
package cz.quantumleap.core.tables;


import cz.quantumleap.core.Core;
import cz.quantumleap.core.Keys;
import cz.quantumleap.core.tables.records.EnumRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EnumTable extends TableImpl<EnumRecord> {

    private static final long serialVersionUID = -714612321;

    /**
     * The reference instance of <code>core.enum</code>
     */
    public static final EnumTable ENUM = new EnumTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EnumRecord> getRecordType() {
        return EnumRecord.class;
    }

    /**
     * The column <code>core.enum.id</code>.
     */
    public final TableField<EnumRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>core.enum.name</code>.
     */
    public final TableField<EnumRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * Create a <code>core.enum</code> table reference
     */
    public EnumTable() {
        this("enum", null);
    }

    /**
     * Create an aliased <code>core.enum</code> table reference
     */
    public EnumTable(String alias) {
        this(alias, ENUM);
    }

    private EnumTable(String alias, Table<EnumRecord> aliased) {
        this(alias, aliased, null);
    }

    private EnumTable(String alias, Table<EnumRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Core.CORE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EnumRecord> getPrimaryKey() {
        return Keys.ENUM_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EnumRecord>> getKeys() {
        return Arrays.<UniqueKey<EnumRecord>>asList(Keys.ENUM_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EnumTable as(String alias) {
        return new EnumTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EnumTable rename(String name) {
        return new EnumTable(name, null);
    }
}
