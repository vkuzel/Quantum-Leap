/*
 * This file is generated by jOOQ.
 */
package cz.quantumleap.core.tables;


import cz.quantumleap.core.Core;
import cz.quantumleap.core.tables.records.GenerateIntervalsRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import java.time.LocalDate;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GenerateIntervalsTable extends TableImpl<GenerateIntervalsRecord> {

    private static final long serialVersionUID = 981687631;

    /**
     * The reference instance of <code>core.generate_intervals</code>
     */
    public static final GenerateIntervalsTable GENERATE_INTERVALS = new GenerateIntervalsTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GenerateIntervalsRecord> getRecordType() {
        return GenerateIntervalsRecord.class;
    }

    /**
     * The column <code>core.generate_intervals.interval_start</code>.
     */
    public final TableField<GenerateIntervalsRecord, LocalDateTime> INTERVAL_START = createField(DSL.name("interval_start"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>core.generate_intervals.interval_end</code>.
     */
    public final TableField<GenerateIntervalsRecord, LocalDateTime> INTERVAL_END = createField(DSL.name("interval_end"), org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * Create a <code>core.generate_intervals</code> table reference
     */
    public GenerateIntervalsTable() {
        this(DSL.name("generate_intervals"), null);
    }

    /**
     * Create an aliased <code>core.generate_intervals</code> table reference
     */
    public GenerateIntervalsTable(String alias) {
        this(DSL.name(alias), GENERATE_INTERVALS);
    }

    /**
     * Create an aliased <code>core.generate_intervals</code> table reference
     */
    public GenerateIntervalsTable(Name alias) {
        this(alias, GENERATE_INTERVALS);
    }

    private GenerateIntervalsTable(Name alias, Table<GenerateIntervalsRecord> aliased) {
        this(alias, aliased, new Field[3]);
    }

    private GenerateIntervalsTable(Name alias, Table<GenerateIntervalsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.function());
    }

    public <O extends Record> GenerateIntervalsTable(Table<O> child, ForeignKey<O, GenerateIntervalsRecord> key) {
        super(child, key, GENERATE_INTERVALS);
    }

    @Override
    public Schema getSchema() {
        return Core.CORE;
    }

    @Override
    public GenerateIntervalsTable as(String alias) {
        return new GenerateIntervalsTable(DSL.name(alias), this, parameters);
    }

    @Override
    public GenerateIntervalsTable as(Name alias) {
        return new GenerateIntervalsTable(alias, this, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public GenerateIntervalsTable rename(String name) {
        return new GenerateIntervalsTable(DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @Override
    public GenerateIntervalsTable rename(Name name) {
        return new GenerateIntervalsTable(name, null, parameters);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * Call this table-valued function
     */
    public GenerateIntervalsTable call(LocalDate intervalsStart, LocalDate intervalsEnd, String step) {
        return new GenerateIntervalsTable(DSL.name(getName()), null, new Field[] { 
              DSL.val(intervalsStart, org.jooq.impl.SQLDataType.LOCALDATE)
            , DSL.val(intervalsEnd, org.jooq.impl.SQLDataType.LOCALDATE)
            , DSL.val(step, org.jooq.impl.SQLDataType.VARCHAR)
        });
    }

    /**
     * Call this table-valued function
     */
    public GenerateIntervalsTable call(Field<LocalDate> intervalsStart, Field<LocalDate> intervalsEnd, Field<String> step) {
        return new GenerateIntervalsTable(DSL.name(getName()), null, new Field[] { 
              intervalsStart
            , intervalsEnd
            , step
        });
    }
}
