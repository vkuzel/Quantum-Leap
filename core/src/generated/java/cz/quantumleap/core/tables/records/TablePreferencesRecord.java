/*
 * This file is generated by jOOQ.
 */
package cz.quantumleap.core.tables.records;


import cz.quantumleap.core.tables.TablePreferencesTable;
import org.jooq.*;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TablePreferencesRecord extends UpdatableRecordImpl<TablePreferencesRecord> implements Record5<Long, String, Boolean, String[], JSON> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>core.table_preferences.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>core.table_preferences.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>core.table_preferences.entity_identifier</code>.
     */
    public void setEntityIdentifier(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>core.table_preferences.entity_identifier</code>.
     */
    public String getEntityIdentifier() {
        return (String) get(1);
    }

    /**
     * Setter for <code>core.table_preferences.is_default</code>.
     */
    public void setIsDefault(Boolean value) {
        set(2, value);
    }

    /**
     * Getter for <code>core.table_preferences.is_default</code>.
     */
    public Boolean getIsDefault() {
        return (Boolean) get(2);
    }

    /**
     * Setter for <code>core.table_preferences.enabled_columns</code>.
     */
    public void setEnabledColumns(String[] value) {
        set(3, value);
    }

    /**
     * Getter for <code>core.table_preferences.enabled_columns</code>.
     */
    public String[] getEnabledColumns() {
        return (String[]) get(3);
    }

    /**
     * Setter for <code>core.table_preferences.filters</code>.
     */
    public void setFilters(JSON value) {
        set(4, value);
    }

    /**
     * Getter for <code>core.table_preferences.filters</code>.
     */
    public JSON getFilters() {
        return (JSON) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, String, Boolean, String[], JSON> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, String, Boolean, String[], JSON> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return TablePreferencesTable.TABLE_PREFERENCES.ID;
    }

    @Override
    public Field<String> field2() {
        return TablePreferencesTable.TABLE_PREFERENCES.ENTITY_IDENTIFIER;
    }

    @Override
    public Field<Boolean> field3() {
        return TablePreferencesTable.TABLE_PREFERENCES.IS_DEFAULT;
    }

    @Override
    public Field<String[]> field4() {
        return TablePreferencesTable.TABLE_PREFERENCES.ENABLED_COLUMNS;
    }

    @Override
    public Field<JSON> field5() {
        return TablePreferencesTable.TABLE_PREFERENCES.FILTERS;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getEntityIdentifier();
    }

    @Override
    public Boolean component3() {
        return getIsDefault();
    }

    @Override
    public String[] component4() {
        return getEnabledColumns();
    }

    @Override
    public JSON component5() {
        return getFilters();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getEntityIdentifier();
    }

    @Override
    public Boolean value3() {
        return getIsDefault();
    }

    @Override
    public String[] value4() {
        return getEnabledColumns();
    }

    @Override
    public JSON value5() {
        return getFilters();
    }

    @Override
    public TablePreferencesRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public TablePreferencesRecord value2(String value) {
        setEntityIdentifier(value);
        return this;
    }

    @Override
    public TablePreferencesRecord value3(Boolean value) {
        setIsDefault(value);
        return this;
    }

    @Override
    public TablePreferencesRecord value4(String[] value) {
        setEnabledColumns(value);
        return this;
    }

    @Override
    public TablePreferencesRecord value5(JSON value) {
        setFilters(value);
        return this;
    }

    @Override
    public TablePreferencesRecord values(Long value1, String value2, Boolean value3, String[] value4, JSON value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TablePreferencesRecord
     */
    public TablePreferencesRecord() {
        super(TablePreferencesTable.TABLE_PREFERENCES);
    }

    /**
     * Create a detached, initialised TablePreferencesRecord
     */
    public TablePreferencesRecord(Long id, String entityIdentifier, Boolean isDefault, String[] enabledColumns, JSON filters) {
        super(TablePreferencesTable.TABLE_PREFERENCES);

        setId(id);
        setEntityIdentifier(entityIdentifier);
        setIsDefault(isDefault);
        setEnabledColumns(enabledColumns);
        setFilters(filters);
    }
}
