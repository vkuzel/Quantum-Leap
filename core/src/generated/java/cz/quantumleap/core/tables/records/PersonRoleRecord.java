/*
 * This file is generated by jOOQ.
 */
package cz.quantumleap.core.tables.records;


import cz.quantumleap.core.tables.PersonRoleTable;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PersonRoleRecord extends UpdatableRecordImpl<PersonRoleRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>core.person_role.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>core.person_role.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>core.person_role.person_id</code>.
     */
    public void setPersonId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>core.person_role.person_id</code>.
     */
    public Long getPersonId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>core.person_role.role_id</code>.
     */
    public void setRoleId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>core.person_role.role_id</code>.
     */
    public Long getRoleId() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PersonRoleRecord
     */
    public PersonRoleRecord() {
        super(PersonRoleTable.PERSON_ROLE);
    }

    /**
     * Create a detached, initialised PersonRoleRecord
     */
    public PersonRoleRecord(Long id, Long personId, Long roleId) {
        super(PersonRoleTable.PERSON_ROLE);

        setId(id);
        setPersonId(personId);
        setRoleId(roleId);
        resetChangedOnNotNull();
    }
}
