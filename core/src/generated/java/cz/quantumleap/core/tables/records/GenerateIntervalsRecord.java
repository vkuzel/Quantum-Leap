/*
 * This file is generated by jOOQ.
 */
package cz.quantumleap.core.tables.records;


import cz.quantumleap.core.tables.GenerateIntervalsTable;
import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;

import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GenerateIntervalsRecord extends TableRecordImpl<GenerateIntervalsRecord> implements Record2<LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>core.generate_intervals.interval_start</code>.
     */
    public void setIntervalStart(LocalDateTime value) {
        set(0, value);
    }

    /**
     * Getter for <code>core.generate_intervals.interval_start</code>.
     */
    public LocalDateTime getIntervalStart() {
        return (LocalDateTime) get(0);
    }

    /**
     * Setter for <code>core.generate_intervals.interval_end</code>.
     */
    public void setIntervalEnd(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>core.generate_intervals.interval_end</code>.
     */
    public LocalDateTime getIntervalEnd() {
        return (LocalDateTime) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<LocalDateTime, LocalDateTime> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<LocalDateTime> field1() {
        return GenerateIntervalsTable.GENERATE_INTERVALS.INTERVAL_START;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return GenerateIntervalsTable.GENERATE_INTERVALS.INTERVAL_END;
    }

    @Override
    public LocalDateTime component1() {
        return getIntervalStart();
    }

    @Override
    public LocalDateTime component2() {
        return getIntervalEnd();
    }

    @Override
    public LocalDateTime value1() {
        return getIntervalStart();
    }

    @Override
    public LocalDateTime value2() {
        return getIntervalEnd();
    }

    @Override
    public GenerateIntervalsRecord value1(LocalDateTime value) {
        setIntervalStart(value);
        return this;
    }

    @Override
    public GenerateIntervalsRecord value2(LocalDateTime value) {
        setIntervalEnd(value);
        return this;
    }

    @Override
    public GenerateIntervalsRecord values(LocalDateTime value1, LocalDateTime value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GenerateIntervalsRecord
     */
    public GenerateIntervalsRecord() {
        super(GenerateIntervalsTable.GENERATE_INTERVALS);
    }

    /**
     * Create a detached, initialised GenerateIntervalsRecord
     */
    public GenerateIntervalsRecord(LocalDateTime intervalStart, LocalDateTime intervalEnd) {
        super(GenerateIntervalsTable.GENERATE_INTERVALS);

        setIntervalStart(intervalStart);
        setIntervalEnd(intervalEnd);
    }
}
