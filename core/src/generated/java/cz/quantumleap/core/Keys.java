/*
 * This file is generated by jOOQ.
 */
package cz.quantumleap.core;


import cz.quantumleap.core.tables.*;
import cz.quantumleap.core.tables.records.*;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>core</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<IncrementRecord, Long> IDENTITY_INCREMENT = Identities0.IDENTITY_INCREMENT;
    public static final Identity<PersonRecord, Long> IDENTITY_PERSON = Identities0.IDENTITY_PERSON;
    public static final Identity<PersonRoleRecord, Long> IDENTITY_PERSON_ROLE = Identities0.IDENTITY_PERSON_ROLE;
    public static final Identity<RoleRecord, Long> IDENTITY_ROLE = Identities0.IDENTITY_ROLE;
    public static final Identity<TablePreferencesRecord, Long> IDENTITY_TABLE_PREFERENCES = Identities0.IDENTITY_TABLE_PREFERENCES;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<EnumRecord> ENUM_PKEY = UniqueKeys0.ENUM_PKEY;
    public static final UniqueKey<EnumValueRecord> ENUM_VALUE_PKEY1 = UniqueKeys0.ENUM_VALUE_PKEY1;
    public static final UniqueKey<IncrementRecord> INCREMENT_PKEY = UniqueKeys0.INCREMENT_PKEY;
    public static final UniqueKey<PersonRecord> PERSON_PKEY = UniqueKeys0.PERSON_PKEY;
    public static final UniqueKey<PersonRecord> PERSON_EMAIL_KEY = UniqueKeys0.PERSON_EMAIL_KEY;
    public static final UniqueKey<PersonRoleRecord> PERSON_ROLE_PKEY = UniqueKeys0.PERSON_ROLE_PKEY;
    public static final UniqueKey<PersonRoleRecord> PERSON_ROLE_PERSON_ID_ROLE_ID_KEY = UniqueKeys0.PERSON_ROLE_PERSON_ID_ROLE_ID_KEY;
    public static final UniqueKey<RoleRecord> ROLE_PKEY = UniqueKeys0.ROLE_PKEY;
    public static final UniqueKey<RoleRecord> ROLE_NAME_KEY = UniqueKeys0.ROLE_NAME_KEY;
    public static final UniqueKey<TablePreferencesRecord> TABLE_PREFERENCES_PKEY = UniqueKeys0.TABLE_PREFERENCES_PKEY;
    public static final UniqueKey<TablePreferencesRecord> TABLE_PREFERENCES_ENTITY_IDENTIFIER_IS_DEFAULT_KEY = UniqueKeys0.TABLE_PREFERENCES_ENTITY_IDENTIFIER_IS_DEFAULT_KEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<EnumValueRecord, EnumRecord> ENUM_VALUE__ENUM_VALUE_ENUM_ID_FKEY1 = ForeignKeys0.ENUM_VALUE__ENUM_VALUE_ENUM_ID_FKEY1;
    public static final ForeignKey<PersonRoleRecord, PersonRecord> PERSON_ROLE__PERSON_ROLE_PERSON_ID_FKEY = ForeignKeys0.PERSON_ROLE__PERSON_ROLE_PERSON_ID_FKEY;
    public static final ForeignKey<PersonRoleRecord, RoleRecord> PERSON_ROLE__PERSON_ROLE_ROLE_ID_FKEY = ForeignKeys0.PERSON_ROLE__PERSON_ROLE_ROLE_ID_FKEY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<IncrementRecord, Long> IDENTITY_INCREMENT = Internal.createIdentity(IncrementTable.INCREMENT, IncrementTable.INCREMENT.ID);
        public static Identity<PersonRecord, Long> IDENTITY_PERSON = Internal.createIdentity(PersonTable.PERSON, PersonTable.PERSON.ID);
        public static Identity<PersonRoleRecord, Long> IDENTITY_PERSON_ROLE = Internal.createIdentity(PersonRoleTable.PERSON_ROLE, PersonRoleTable.PERSON_ROLE.ID);
        public static Identity<RoleRecord, Long> IDENTITY_ROLE = Internal.createIdentity(RoleTable.ROLE, RoleTable.ROLE.ID);
        public static Identity<TablePreferencesRecord, Long> IDENTITY_TABLE_PREFERENCES = Internal.createIdentity(TablePreferencesTable.TABLE_PREFERENCES, TablePreferencesTable.TABLE_PREFERENCES.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<EnumRecord> ENUM_PKEY = Internal.createUniqueKey(EnumTable.ENUM, "enum_pkey", new TableField[] { EnumTable.ENUM.ID }, true);
        public static final UniqueKey<EnumValueRecord> ENUM_VALUE_PKEY1 = Internal.createUniqueKey(EnumValueTable.ENUM_VALUE, "enum_value_pkey1", new TableField[] { EnumValueTable.ENUM_VALUE.ID, EnumValueTable.ENUM_VALUE.ENUM_ID }, true);
        public static final UniqueKey<IncrementRecord> INCREMENT_PKEY = Internal.createUniqueKey(IncrementTable.INCREMENT, "increment_pkey", new TableField[] { IncrementTable.INCREMENT.ID }, true);
        public static final UniqueKey<PersonRecord> PERSON_PKEY = Internal.createUniqueKey(PersonTable.PERSON, "person_pkey", new TableField[] { PersonTable.PERSON.ID }, true);
        public static final UniqueKey<PersonRecord> PERSON_EMAIL_KEY = Internal.createUniqueKey(PersonTable.PERSON, "person_email_key", new TableField[] { PersonTable.PERSON.EMAIL }, true);
        public static final UniqueKey<PersonRoleRecord> PERSON_ROLE_PKEY = Internal.createUniqueKey(PersonRoleTable.PERSON_ROLE, "person_role_pkey", new TableField[] { PersonRoleTable.PERSON_ROLE.ID }, true);
        public static final UniqueKey<PersonRoleRecord> PERSON_ROLE_PERSON_ID_ROLE_ID_KEY = Internal.createUniqueKey(PersonRoleTable.PERSON_ROLE, "person_role_person_id_role_id_key", new TableField[] { PersonRoleTable.PERSON_ROLE.PERSON_ID, PersonRoleTable.PERSON_ROLE.ROLE_ID }, true);
        public static final UniqueKey<RoleRecord> ROLE_PKEY = Internal.createUniqueKey(RoleTable.ROLE, "role_pkey", new TableField[] { RoleTable.ROLE.ID }, true);
        public static final UniqueKey<RoleRecord> ROLE_NAME_KEY = Internal.createUniqueKey(RoleTable.ROLE, "role_name_key", new TableField[] { RoleTable.ROLE.NAME }, true);
        public static final UniqueKey<TablePreferencesRecord> TABLE_PREFERENCES_PKEY = Internal.createUniqueKey(TablePreferencesTable.TABLE_PREFERENCES, "table_preferences_pkey", new TableField[] { TablePreferencesTable.TABLE_PREFERENCES.ID }, true);
        public static final UniqueKey<TablePreferencesRecord> TABLE_PREFERENCES_ENTITY_IDENTIFIER_IS_DEFAULT_KEY = Internal.createUniqueKey(TablePreferencesTable.TABLE_PREFERENCES, "table_preferences_entity_identifier_is_default_key", new TableField[] { TablePreferencesTable.TABLE_PREFERENCES.ENTITY_IDENTIFIER, TablePreferencesTable.TABLE_PREFERENCES.IS_DEFAULT }, true);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<EnumValueRecord, EnumRecord> ENUM_VALUE__ENUM_VALUE_ENUM_ID_FKEY1 = Internal.createForeignKey(Keys.ENUM_PKEY, EnumValueTable.ENUM_VALUE, "enum_value_enum_id_fkey1", new TableField[] { EnumValueTable.ENUM_VALUE.ENUM_ID }, true);
        public static final ForeignKey<PersonRoleRecord, PersonRecord> PERSON_ROLE__PERSON_ROLE_PERSON_ID_FKEY = Internal.createForeignKey(Keys.PERSON_PKEY, PersonRoleTable.PERSON_ROLE, "person_role_person_id_fkey", new TableField[] { PersonRoleTable.PERSON_ROLE.PERSON_ID }, true);
        public static final ForeignKey<PersonRoleRecord, RoleRecord> PERSON_ROLE__PERSON_ROLE_ROLE_ID_FKEY = Internal.createForeignKey(Keys.ROLE_PKEY, PersonRoleTable.PERSON_ROLE, "person_role_role_id_fkey", new TableField[] { PersonRoleTable.PERSON_ROLE.ROLE_ID }, true);
    }
}
